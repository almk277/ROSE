				ROSE Assembler directives

There is three section types: data, text and strings. Every section
begins with special directive and reaches until the next section.
Comments starts with '#' and ends at end of line.
.data contains module variables declaration, one per line. Every variable
might be aliased multiple times.
.text contains instructions within procedures, and labels.
.str contains initialized arrays (for example, strings).
--------------------------------------------
.module just_an_example 0.1
.data x y      # first and second module variables
.data z        # third variable
.sub main      # .text begins
.export main
exit:          # label
	exit       # instruction
.str
	hello "hello, world!\n"
	"and bye";
	myname { 'R', 'O', 'S' 'E' }
--------------------------------------------

.arg <name>
	Declares procedure argument. Several arguments are allowed.

.data
	Declares #data variable. Sevaral variables are allowed.

.export <name>
	Declares procedure 'name' as public.

.extern <module:name>
	Imports procedure with <name> from <module> (previously imported with
	.import).

.import <name [<maj>.<min>]>
	Imports module with given name and version (0.0 by default).

.inherits <module>
	Declares that current module inherits another module <module>
	(previously imported with .import).

.module <name [<maj>.<min>]>
	Declares current module name and version (0.0 by default).

.str <name>
	Declares #str section, begins a string with <name>.

.sub <name>
	Declares #text section with procedure <name>. Instructions and non-section
	directives may be used here.

.var <name>
	Declares local variable. Several variables are allowed.
