Every instruction starts with one-byte opcode, possibly followed
by several operands.

Any instruction name in this document is prefixed with "#" sign. Any operand
reference is prefixed with "$" sign. For example, "$data" record means that
current instruction contains operand with data index (that is,
index into data table). Prefix "." means segment name (".data", for example).
@top is stack top word. @base is stack frame base.

			1. Data types

Data types are:
	* Integer;
	* Float;
	* Array;
	* File;
	* Object.

				1.1 Integers

Integers are 32-bits signed numbers.
Constructors: #int.new, #int.snew.
Base arithmetic operations: #int.add, #int.sub, increment #inc, decrement #dec.
Multiplication and division not implemented yet.

				1.2 Floats

Floats are IEEE-754 single precision floating-point numbers.
Constructor: #flt.new.
Arithmetic operations: #flt.add, #flt.sub, #flt.mul, #flt.div.

				1.3 Arrays

An array is a container with random access.
Constructors: #arr.new, #arr.load.
It has #arr.len elements, accessible with #arr.get and #arr.put.

				1.4 Files

Under consideration.

				1.5 Objects

An object is a module instance. Constructor: #new.
It has a state (all variables), accessible with #load and #store.

			2. Execution flow

Execution flow is controlled with jumps and procedure calls.

				2.1 Jumps

Unconditional jump: #jump.
Conditional jumps: #jumpeq, #jumpl, #jumple, #jumplf, #jumpz.

				2.2 Procedure call

There is 3 variants of procedure call.

					2.2.1 Internal call

#call is used for calling procedure from the same module procedure. This is fast.

					2.2.2 External call

#invoke is used for calling procedure in some other module.

					2.2.3 Dispatch

#dispatch is used for virtual method calling.
It looks into the given dispatch object and searches for the procedure in it's
module.

				2.3 Return from procedure

#return returns control flow to the last procedure invoked some call variant.

				2.4 Exit

#exit terminates current thread.

			3 Miscellaneous

#move, #nop, #dbg.byte, #dbg.str.
