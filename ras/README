This is ROSE assembler.

There is three section types: data, text and strings. Every section
begins with special directive and reaches until the next section.
Comments starts with '#' and ends at end of line.
.data contains module variables declaration, one per line. Every variable
might be aliased multiple times.
.text contains instructions within procedures, and labels.
.str contains initialized arrays (for example, strings).
--------------------------------------------
.module just_an_example
.version 0.1
.data          # .data begins
	x          # first module variable
	y          # second variable
	z : temp   # third variable with alias
.sub main      # .text begins
exit:          # label
	exit       # instruction
.str
	hello "hello, world!\n"
	"another line";
	bye { 'b', 'y', 'e' }
--------------------------------------------


.arg <name>
	Declares procedure argument.

.data
	Starts #data section. Data variables are placed one per line.

.export <name>
	Declares procedure 'name' as public.

.extern <module:name>
	Imports procedure with <name> from <module> (previously imported with
	.import).

.import <name>
	Imports module with given name.

.inherits <module>
	Declares that current module inherits another module <module>.

.module <name>
	Declares current module name and version.

.str
	Declares #str section. String looks like <name> = "Text string"
    or <name> = { byte1, byte2, ... }

.sub <name>
	Starts #text section with procedure <name>. Instructions and labels
	may be used here.

.var <name>
	Declares local variable for current procedure.

.version <maj>.<min>
	Declares current module version (1.0 by default).
